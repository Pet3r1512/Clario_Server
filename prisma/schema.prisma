generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String        @id
  name          String
  email         String        @unique
  emailVerified Boolean
  image         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  transactions  Transaction[]
  accounts      Account[]
  sessions      Session[]
  categories    Category[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String   @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("verification")
}

model Category {
  id           Int           @id @default(autoincrement())
  userId       String? //If null => default global category
  name         String
  type         CategoryType
  description  String?
  user         User?         @relation(fields: [userId], references: [id])
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Transaction {
  id          String            @id @default(cuid())
  userId      String
  categoryId  Int?
  amount      Decimal           @db.Decimal(10, 2)
  currency    SupportedCurrency @default(AUD)
  description String?
  date        DateTime
  createdAt   DateTime          @default(now())
  user        User              @relation(fields: [userId], references: [id])
  category    Category?         @relation(fields: [categoryId], references: [id])
}

enum CategoryType {
  INCOME
  EXPENSE
}

enum SupportedCurrency {
  USD
  AUD
  VND
}
